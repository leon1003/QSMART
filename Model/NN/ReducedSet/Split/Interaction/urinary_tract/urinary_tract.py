from __future__ import division
import jmp_score as jmp
from math import *
import numpy as np


""" ==================================================================
 Copyright(C) 2018 SAS Institute Inc.All rights reserved.
 
 Notice:
 The following permissions are granted provided that the
 above copyright and this notice appear in the score code and
 any related documentation. Permission to copy, modify
 and distribute the score code generated using
 JMP(R) software is limited to customers of SAS Institute Inc. ("SAS")
 and successive third parties, all without any warranty, express or
 implied, or any other obligation by SAS. SAS and all other SAS
 Institute Inc. product and service names are registered
 trademarks or trademarks of SAS Institute Inc. in the USA
 and other countries. Except as contained in this notice,
 the name of the SAS Institute Inc. and JMP shall not be used in
 the advertising or promotion of products or services without
 prior written authorization from SAS Institute Inc.
 ================================================================== """

""" Python code generated by JMP v14.1.0 """

def getModelMetadata():
	return {"creator": u"Neural", "modelName": u"", "predicted": u"IC50", "table": u"urinary_tract", "version": u"14.1.0", "timestamp": u"2019-08-06T15:34:00Z"}


def getInputMetadata():
    return {
        u"EXP_ABL1_X_EXP_WASF1": "float",
        u"EXP_BMP2K_X_EXP_NUMB": "float",
        u"EXP_BMP2K_X_EXP_RALBP1": "float",
        u"EXP_GRK2_X_EXP_OR6A2": "float",
        u"EXP_GRK2_X_EXP_P2RY11": "float",
        u"EXP_STK25_X_EXP_PDCD10": "float",
        u"GO_0006915_X_GO_0006954": "float",
        u"PKA_140_POL_X_Fingerprint_646": "float",
        u"PKA_252_ASA_X_Fingerprint_576": "float",
        u"PKA_252_CSV_X_Fingerprint_576": "float",
        u"PKA_252_ENG_X_Fingerprint_576": "float",
        u"PKA_265_ASA_X_Fingerprint_659": "float",
        u"PKA_265_CSV_X_Fingerprint_659": "float",
        u"PKA_265_HYD_X_Fingerprint_659": "float",
        u"PKA_265_VOL_X_Fingerprint_659": "float",
        u"PKA_265_X_Fingerprint_659": "float"
	}


def getOutputMetadata():
    return {
        u"Predicted IC50_1": "float"
	}


def score(indata, outdata):
    # H1_1
    # H1_2
    # H1_3
    # H1_4
    # H1_5
    # H1_6
    # H1_7
    # H1_8
    # H1_9

    H1_1 = tanh((-5.99662575390143 + -0.0751601133200245 * indata[u"EXP_ABL1_X_EXP_WASF1"] + 0.0417737577290452 * indata[u"EXP_BMP2K_X_EXP_NUMB"] + 0.00841575021419318 * indata[u"EXP_BMP2K_X_EXP_RALBP1"] + -0.0313803450604364 * indata[u"EXP_GRK2_X_EXP_OR6A2"] + 0.46428313331865 * indata[u"EXP_GRK2_X_EXP_P2RY11"] + 0.0248250528665086 * indata[u"EXP_STK25_X_EXP_PDCD10"] + 0.541838412310556 * indata[u"GO_0006915_X_GO_0006954"] + -0.59627932751468 * indata[u"PKA_140_POL_X_Fingerprint_646"] + 0.0349426470042418 * indata[u"PKA_252_ASA_X_Fingerprint_576"] + 0.356413386941912 * indata[u"PKA_252_CSV_X_Fingerprint_576"] + -0.915408545859699 * indata[u"PKA_252_ENG_X_Fingerprint_576"] + 1.55033785330833 * indata[u"PKA_265_ASA_X_Fingerprint_659"] + -7.42012166273645 * indata[u"PKA_265_CSV_X_Fingerprint_659"] + -10.8906213360135 * indata[u"PKA_265_HYD_X_Fingerprint_659"] + -0.0263277286028012 * indata[u"PKA_265_VOL_X_Fingerprint_659"] + -1.11435334969203 * indata[u"PKA_265_X_Fingerprint_659"]))

    H1_2 = tanh((-12.35019906176 + 0.122439586667295 * indata[u"EXP_ABL1_X_EXP_WASF1"] + 0.139145399581075 * indata[u"EXP_BMP2K_X_EXP_NUMB"] + -0.016389949017454 * indata[u"EXP_BMP2K_X_EXP_RALBP1"] + 0.55920505959241 * indata[u"EXP_GRK2_X_EXP_OR6A2"] + -0.60885560661323 * indata[u"EXP_GRK2_X_EXP_P2RY11"] + 0.147480795295253 * indata[u"EXP_STK25_X_EXP_PDCD10"] + 0.604212888991878 * indata[u"GO_0006915_X_GO_0006954"] + -0.125831803637054 * indata[u"PKA_140_POL_X_Fingerprint_646"] + 0.108792740876794 * indata[u"PKA_252_ASA_X_Fingerprint_576"] + -0.769035169169848 * indata[u"PKA_252_CSV_X_Fingerprint_576"] + 0.340543766194438 * indata[u"PKA_252_ENG_X_Fingerprint_576"] + 0.643210014883629 * indata[u"PKA_265_ASA_X_Fingerprint_659"] + -5.21411762719407 * indata[u"PKA_265_CSV_X_Fingerprint_659"] + 3.44583843832002 * indata[u"PKA_265_HYD_X_Fingerprint_659"] + 0.267928283242589 * indata[u"PKA_265_VOL_X_Fingerprint_659"] + -4.88598041712082 * indata[u"PKA_265_X_Fingerprint_659"]))

    H1_3 = tanh((-0.336036331739062 + -0.119035929562927 * indata[u"EXP_ABL1_X_EXP_WASF1"] + 0.125135349208573 * indata[u"EXP_BMP2K_X_EXP_NUMB"] + 0.0931817844399165 * indata[u"EXP_BMP2K_X_EXP_RALBP1"] + -0.406943532944486 * indata[u"EXP_GRK2_X_EXP_OR6A2"] + 0.0831890319614543 * indata[u"EXP_GRK2_X_EXP_P2RY11"] + -0.0228243290508753 * indata[u"EXP_STK25_X_EXP_PDCD10"] + 1.04280712294626 * indata[u"GO_0006915_X_GO_0006954"] + -0.185282384578492 * indata[u"PKA_140_POL_X_Fingerprint_646"] + 0.0113048186406649 * indata[u"PKA_252_ASA_X_Fingerprint_576"] + -2.26166910946219 * indata[u"PKA_252_CSV_X_Fingerprint_576"] + -0.154956359520386 * indata[u"PKA_252_ENG_X_Fingerprint_576"] + -1.54879079141402 * indata[u"PKA_265_ASA_X_Fingerprint_659"] + 5.81000416936698 * indata[u"PKA_265_CSV_X_Fingerprint_659"] + 17.73927120836 * indata[u"PKA_265_HYD_X_Fingerprint_659"] + -0.0814281173984973 * indata[u"PKA_265_VOL_X_Fingerprint_659"] + -2.9602013482762 * indata[u"PKA_265_X_Fingerprint_659"]))

    H1_4 = tanh((15.1979891102534 + 0.0854612693001389 * indata[u"EXP_ABL1_X_EXP_WASF1"] + -0.177254098688041 * indata[u"EXP_BMP2K_X_EXP_NUMB"] + -0.0514159206015897 * indata[u"EXP_BMP2K_X_EXP_RALBP1"] + -0.383412509402901 * indata[u"EXP_GRK2_X_EXP_OR6A2"] + 0.0441613972381395 * indata[u"EXP_GRK2_X_EXP_P2RY11"] + -0.167561852249373 * indata[u"EXP_STK25_X_EXP_PDCD10"] + 0.265221646671971 * indata[u"GO_0006915_X_GO_0006954"] + 0.590272689492604 * indata[u"PKA_140_POL_X_Fingerprint_646"] + -0.0743384974573142 * indata[u"PKA_252_ASA_X_Fingerprint_576"] + -5.31634568920729 * indata[u"PKA_252_CSV_X_Fingerprint_576"] + 0.235264612944621 * indata[u"PKA_252_ENG_X_Fingerprint_576"] + -1.46180138182612 * indata[u"PKA_265_ASA_X_Fingerprint_659"] + -0.629113293362867 * indata[u"PKA_265_CSV_X_Fingerprint_659"] + 25.4372535964098 * indata[u"PKA_265_HYD_X_Fingerprint_659"] + 0.115053408557691 * indata[u"PKA_265_VOL_X_Fingerprint_659"] + 2.4336500178875 * indata[u"PKA_265_X_Fingerprint_659"]))

    H1_5 = tanh((-1.55392537603877 + -0.0566991748735169 * indata[u"EXP_ABL1_X_EXP_WASF1"] + 0.0699294350100942 * indata[u"EXP_BMP2K_X_EXP_NUMB"] + -0.0617714426532745 * indata[u"EXP_BMP2K_X_EXP_RALBP1"] + 0.255418888489748 * indata[u"EXP_GRK2_X_EXP_OR6A2"] + -0.0700851922333115 * indata[u"EXP_GRK2_X_EXP_P2RY11"] + 0.0298764757977815 * indata[u"EXP_STK25_X_EXP_PDCD10"] + 0.487859909307647 * indata[u"GO_0006915_X_GO_0006954"] + -1.04448652868264 * indata[u"PKA_140_POL_X_Fingerprint_646"] + 0.143591113411688 * indata[u"PKA_252_ASA_X_Fingerprint_576"] + -2.03369245108954 * indata[u"PKA_252_CSV_X_Fingerprint_576"] + -3.70434867518344 * indata[u"PKA_252_ENG_X_Fingerprint_576"] + -0.826544903865721 * indata[u"PKA_265_ASA_X_Fingerprint_659"] + -2.16149640526412 * indata[u"PKA_265_CSV_X_Fingerprint_659"] + 8.67283568147265 * indata[u"PKA_265_HYD_X_Fingerprint_659"] + -0.0569096080629258 * indata[u"PKA_265_VOL_X_Fingerprint_659"] + 6.65379911993697 * indata[u"PKA_265_X_Fingerprint_659"]))

    H1_6 = tanh((2.28535042622048 + -0.00261645211160397 * indata[u"EXP_ABL1_X_EXP_WASF1"] + 0.117037273553696 * indata[u"EXP_BMP2K_X_EXP_NUMB"] + -0.0693696710031948 * indata[u"EXP_BMP2K_X_EXP_RALBP1"] + 0.250443725328493 * indata[u"EXP_GRK2_X_EXP_OR6A2"] + -0.462333868008283 * indata[u"EXP_GRK2_X_EXP_P2RY11"] + 0.0248723176198962 * indata[u"EXP_STK25_X_EXP_PDCD10"] + -0.081812495749969 * indata[u"GO_0006915_X_GO_0006954"] + -0.00438708060380045 * indata[u"PKA_140_POL_X_Fingerprint_646"] + 0.211537299109507 * indata[u"PKA_252_ASA_X_Fingerprint_576"] + 8.01420137070511 * indata[u"PKA_252_CSV_X_Fingerprint_576"] + -0.522100213494261 * indata[u"PKA_252_ENG_X_Fingerprint_576"] + 1.5620023884229 * indata[u"PKA_265_ASA_X_Fingerprint_659"] + -0.592465865399027 * indata[u"PKA_265_CSV_X_Fingerprint_659"] + 4.12785908589017 * indata[u"PKA_265_HYD_X_Fingerprint_659"] + -0.0585412305256022 * indata[u"PKA_265_VOL_X_Fingerprint_659"] + -0.503121704116724 * indata[u"PKA_265_X_Fingerprint_659"]))

    H1_7 = tanh((15.8479303176215 + -0.0177574627835609 * indata[u"EXP_ABL1_X_EXP_WASF1"] + -0.217090393671743 * indata[u"EXP_BMP2K_X_EXP_NUMB"] + 0.0149010183230614 * indata[u"EXP_BMP2K_X_EXP_RALBP1"] + -0.573808586654733 * indata[u"EXP_GRK2_X_EXP_OR6A2"] + -0.369500861761437 * indata[u"EXP_GRK2_X_EXP_P2RY11"] + -0.00246956145595476 * indata[u"EXP_STK25_X_EXP_PDCD10"] + 0.609632841645246 * indata[u"GO_0006915_X_GO_0006954"] + -0.993317106520082 * indata[u"PKA_140_POL_X_Fingerprint_646"] + -0.0625773660416342 * indata[u"PKA_252_ASA_X_Fingerprint_576"] + -3.60094111354411 * indata[u"PKA_252_CSV_X_Fingerprint_576"] + -0.700486503935226 * indata[u"PKA_252_ENG_X_Fingerprint_576"] + 0.415548556619871 * indata[u"PKA_265_ASA_X_Fingerprint_659"] + 4.09495421016105 * indata[u"PKA_265_CSV_X_Fingerprint_659"] + 11.2826515942664 * indata[u"PKA_265_HYD_X_Fingerprint_659"] + -0.0545496177148842 * indata[u"PKA_265_VOL_X_Fingerprint_659"] + 1.48478665017995 * indata[u"PKA_265_X_Fingerprint_659"]))

    H1_8 = tanh((9.95610681726974 + 0.00975769200975156 * indata[u"EXP_ABL1_X_EXP_WASF1"] + 0.0325358492421023 * indata[u"EXP_BMP2K_X_EXP_NUMB"] + 0.148320490438904 * indata[u"EXP_BMP2K_X_EXP_RALBP1"] + -0.983133208592496 * indata[u"EXP_GRK2_X_EXP_OR6A2"] + -0.478739043860012 * indata[u"EXP_GRK2_X_EXP_P2RY11"] + 0.0302147530498778 * indata[u"EXP_STK25_X_EXP_PDCD10"] + -0.840308717601441 * indata[u"GO_0006915_X_GO_0006954"] + 0.958559960281785 * indata[u"PKA_140_POL_X_Fingerprint_646"] + 0.13088589144573 * indata[u"PKA_252_ASA_X_Fingerprint_576"] + 12.5825018888085 * indata[u"PKA_252_CSV_X_Fingerprint_576"] + 0.757808578398896 * indata[u"PKA_252_ENG_X_Fingerprint_576"] + 1.8914398210084 * indata[u"PKA_265_ASA_X_Fingerprint_659"] + -1.89583037459331 * indata[u"PKA_265_CSV_X_Fingerprint_659"] + 10.9827458003925 * indata[u"PKA_265_HYD_X_Fingerprint_659"] + 0.150353731290123 * indata[u"PKA_265_VOL_X_Fingerprint_659"] + -0.628005410186499 * indata[u"PKA_265_X_Fingerprint_659"]))

    H1_9 = tanh((-6.97178863941754 + -0.00366477998633162 * indata[u"EXP_ABL1_X_EXP_WASF1"] + -0.103065553749901 * indata[u"EXP_BMP2K_X_EXP_NUMB"] + 0.0889147254453889 * indata[u"EXP_BMP2K_X_EXP_RALBP1"] + 0.270000091968946 * indata[u"EXP_GRK2_X_EXP_OR6A2"] + 0.124972254039042 * indata[u"EXP_GRK2_X_EXP_P2RY11"] + 0.0227471463153112 * indata[u"EXP_STK25_X_EXP_PDCD10"] + 0.0343752435973743 * indata[u"GO_0006915_X_GO_0006954"] + 0.760114074645766 * indata[u"PKA_140_POL_X_Fingerprint_646"] + -0.0719631891049783 * indata[u"PKA_252_ASA_X_Fingerprint_576"] + 5.59688602177991 * indata[u"PKA_252_CSV_X_Fingerprint_576"] + 0.541669611444061 * indata[u"PKA_252_ENG_X_Fingerprint_576"] + -0.458633331325775 * indata[u"PKA_265_ASA_X_Fingerprint_659"] + 3.12289346965525 * indata[u"PKA_265_CSV_X_Fingerprint_659"] + 8.16989058960108 * indata[u"PKA_265_HYD_X_Fingerprint_659"] + -0.104075726193208 * indata[u"PKA_265_VOL_X_Fingerprint_659"] + -4.29204486973635 * indata[u"PKA_265_X_Fingerprint_659"]))

    outdata[u"Predicted IC50_1"] = 2.75665672789876 + -0.633052784590915 * H1_1 + -0.54749267678175 * H1_2 + 0.416290713482208 * H1_3 + -0.866018063505102 * H1_4 + -0.745495868069653 * H1_5 + 1.2400912829054 * H1_6 + 0.524999094250433 * H1_7 + -0.310938179564959 * H1_8 + 0.221569198234686 * H1_9

    return outdata[u"Predicted IC50_1"]


